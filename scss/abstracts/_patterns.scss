@use 'sass:map';
@use 'sass:list';
@use 'sass:meta';
@use 'sass:string';
@use 'functions' as *;
@use 'variables' as *;

$patterns: (
  'children-reset-spacing': (
    function: 'nested-rules',
    class: children\:spacing-0,
    nesting: (
      '& *': (
        padding: 0,
        margin: 0,
      ),
    ),
    responsive: true,
    important: true,
  ),
  'direct-children-reset-spacing': (
    function: 'nested-rules',
    class: direct-children\:spacing-0,
    nesting: (
      '& > *': (
        padding: 0,
        margin: 0,
      ),
    ),
  ),
  'children-remove-margin': (
    function: 'nested-rules',
    class: children\:m-0,
    nesting: (
      '& *': (
        margin: 0,
      ),
    ),
  ),
  'direct-children-remove-margin': (
    function: 'nested-rules',
    class: direct-children\:m-0,
    nesting: (
      '& > *': (
        margin: 0,
      ),
    ),
  ),
  'first-child-margin-0': (
    function: 'nested-rules',
    class: first-child\:m-0,
    nesting: (
      '& > *:first-child': (
        margin: 0,
      ),
    ),
  ),
  'last-child-margin-0': (
    function: 'nested-rules',
    class: last-child\:m-0,
    nesting: (
      '& > *:first-child': (
        margin: 0,
      ),
    ),
  ),
  'children-custom-marker': (
    function: 'nested-rules',
    class: children\:custom-marker,
    nesting: (
      '& li::marker': (
        color: var(--marker-color),
        font-size: var(--marker-font-size),
      ),
    ),
  ),
  'children-marker-image': (
    function: 'nested-rules',
    class: children\:custom-marker-image,
    nesting: (
      '& li::marker': (
        list-style-image: var(--marker-image-src),
      ),
    ),
  ),
  'direct-children-marker-image': (
    function: 'nested-rules',
    class: direct-children\:custom-marker-image,
    nesting: (
      '& li::marker': (
        list-style-image: var(--marker-image-src),
      ),
    ),
  ),
  'direct-child-custom-marker': (
    function: 'nested-rules',
    class: direct-children\:custom-marker,
    nesting: (
      '& > li::marker': (
        color: var(--marker-color),
        font-size: var(--marker-font-size),
      ),
    ),
  ),
  'focus-visible-children': (
    function: 'nested-rules',
    class: focus-visible\:children,
    nesting: (
      '& :where(a, button, input, textarea, select, details, iframe):focus-visible': (
        outline: 0,
        box-shadow: var(--box-shadow-focus),
      ),
    ),
  ),
  'custom-container': (
    function: 'property-advanced',
    class: container-dynamic,
    properties: (
      padding-inline: $container-padding,
      margin-inline: auto,
      width: 100%,
      max-width: var(--container-dynamic-max-width),
    ),
  ),
  'text-shorten': (
    function: 'property-advanced',
    class: shorten,
    properties: (
      overflow: hidden,
      line-height: var(--shorten-line-height, 1.5),
      max-height: calc(1em * var(--shorten-line-height, 1.5) * var(--shorten-max-line, 4)),
    ),
  ),
  'text-shorten-1': (
    function: 'property-advanced',
    class: shorten-1,
    properties: (
      overflow: hidden,
      line-height: var(--shorten-line-height, 1.5),
      max-height: calc(1em * var(--shorten-line-height, 1.5) * 1),
    ),
  ),
  'text-shorten-2': (
    function: 'property-advanced',
    class: shorten-2,
    properties: (
      overflow: hidden,
      line-height: var(--shorten-line-height, 1.5),
      max-height: calc(1em * var(--shorten-line-height, 1.5) * 2),
    ),
  ),
  'text-shorten-3': (
    function: 'property-advanced',
    class: shorten-3,
    properties: (
      overflow: hidden,
      line-height: var(--shorten-line-height, 1.5),
      max-height: calc(1em * var(--shorten-line-height, 1.5) * 3),
    ),
  ),
  'text-shorten-4': (
    function: 'property-advanced',
    class: shorten-4,
    properties: (
      overflow: hidden,
      line-height: var(--shorten-line-height, 1.5),
      max-height: calc(1em * var(--shorten-line-height, 1.5) * 4),
    ),
  ),
  'text-shorten-5': (
    function: 'property-advanced',
    class: shorten-5,
    properties: (
      overflow: hidden,
      line-height: var(--shorten-line-height, 1.5),
      max-height: calc(1em * var(--shorten-line-height, 1.5) * 5),
    ),
  ),

  'text-truncate': (
    function: 'property-advanced',
    class: truncate,
    properties: (
      display: -webkit-box,
      -webkit-line-clamp: var(--line-clamp, 3),
      -webkit-box-orient: vertical,
      overflow: hidden,
    ),
  ),
  'text-overflow-ellipsis': (
    function: 'property-advanced',
    class: text-ellipsis,
    properties: (
      text-overflow: ellipsis,
      overflow: hidden,
    ),
  ),

  'flow-direct-children': (
    function: 'nested-rules',
    class: flow,
    nesting: (
      '& > * + *': (
        margin-top: var(--flow-space, 1em),
      ),
    ),
  ),
  'flow-all': (
    function: 'nested-rules',
    class: flow-all,
    nesting: (
      '& * + *': (
        margin-top: var(--flow-space, 1em),
      ),
    ),
  ),
  'overlay-custom': (
    function: 'nested-rules',
    class: overlay,
    nesting: (
      position: relative,
      '&::after': (
        content: "''",
        position: absolute,
        inset: 0,
        background-color: var(--overlay-background, var(--clr-black)),
        opacity: var(--alpha, 0.5),
        z-index: var(--overlay-zindex, -1),
      ),
    ),
  ),
  'fade': (
    function: 'nested-rules',
    class: fade,
    nesting: (
      transition: opacity 0.15s linear,
      '&:not(.show)': (
        opacity: 0,
      ),
      '&.show': (
        opacity: 0.5,
      ),
    ),
  ),
  'collapse': (
    function: 'nested-rules',
    class: collapse,
    nesting: (
      '&:not(.show)': (
        display: none,
      ),
    ),
  ),
  'collapsing': (
    function: 'property-advanced',
    class: collapsing,
    properties: (
      height: 0,
      overflow: hidden,
      transition: height 0.35s ease,
    ),
  ),
  'collapsing-horizontal': (
    function: 'property-advanced',
    class: collapsing-horizontal,
    properties: (
      width: 0,
      height: auto,
      transition: width 0.35 ease,
    ),
  ),
  'fixed-bottom': (
    function: 'property-advanced',
    class: fixed-bottom,
    properties: (
      position: fixed,
      bottom: 0,
      right: 0,
      left: 0,
      z-index: var(--#{$cp-namespace}z-1, 999),
    ),
  ),
  'fixed-top': (
    function: 'property-advanced',
    class: fixed-top,
    properties: (
      position: fixed,
      top: 0,
      right: 0,
      left: 0,
      z-index: var(--#{$cp-namespace}z-1),
    ),
  ),
  'clear-float': (
    function: 'property-advanced',
    class: clear-float,
    state: '::after',
    properties: (
      content: '',
      display: block,
      clear: both,
    ),
  ),
  'sr-only-focusable': (
    function: 'property-advanced',
    class: sr-only-focusable,
    state: ':active' ':focus',
    properties: (
      clip: auto,
      -webkit-clip-path: none,
      clip-path: none,
      height: auto,
      margin: auto,
      overflow: visible,
      width: auto,
      white-space: normal,
    ),
  ),
  'sr-only': (
    function: 'property-advanced',
    class: sr-only,
    properties: (
      border: 0,
      clip: rect(1px, 1px, 1px, 1px),
      -webkit-clip-path: inset(50%),
      clip-path: inset(50%),
      height: 1px,
      margin: -1px,
      overflow: hidden,
      padding: 0,
      position: absolute,
      width: 1px,
      white-space: nowrap,
    ),
  ),
  'sticky-top': (
    function: 'property-advanced',
    class: sticky-top,
    properties: (
      position: sticky,
      top: 0,
      z-index: var(--#{$cp-namespace}z-1),
    ),
  ),
  'sticky-bottom': (
    function: 'property-advanced',
    class: sticky-bottom,
    properties: (
      position: sticky,
      bottom: 0,
      z-index: var(--#{$cp-namespace}z-1),
    ),
  ),
  'default-button-style': (
    function: 'property-advanced',
    class: btn-style-reset,
    properties: (
      background-color: transparent,
      cursor: pointer,
      border: none,
    ),
  ),
  'flex-center': (
    function: 'property-advanced',
    class: flex-center,
    properties: (
      display: flex,
      justify-content: center,
      align-items: center,
    ),
  ),

  'direct-child-a-text-none': (
    function: 'nested-rules',
    class: direct-children-a\:text-none,
    nesting: (
      '& > a': (
        text-decoration: none,
      ),
    ),
  ),
  'direct-child-a-reset': (
    responsive: true,
    function: 'nested-rules',
    class: direct-children-a\:reset,
    nesting: (
      '& > a': (
        text-decoration: none,
        color: inherit,
      ),
    ),
  ),
  'children-a-reset': (
    responsive: true,
    function: 'nested-rules',
    class: children-a\:reset,
    nesting: (
      '& a': (
        text-decoration: none,
        color: inherit,
      ),
    ),
  ),
  'children-a-text-none': (
    function: 'nested-rules',
    class: children-a\:text-none,
    nesting: (
      '&  a': (
        text-decoration: none,
      ),
    ),
  ),
  'children-list-reset': (
    function: 'nested-rules',
    class: children\:list-reset,
    nesting: (
      '&  ul': (
        list-style: none,
        padding-left: 0,
      ),
    ),
  ),
  'children-list-none': (
    function: 'nested-rules',
    class: children\:list-reset,
    nesting: (
      '&  ul': (
        list-style: none,
      ),
    ),
  ),
  'direct-children-list-reset': (
    function: 'nested-rules',
    class: direct-children\:list-none,
    nesting: (
      '& > ul': (
        list-style: none,
        padding-left: 0,
      ),
    ),
  ),
  'direct-children-list-none': (
    function: 'nested-rules',
    class: direct-children\:list-none,
    nesting: (
      '& > ul': (
        list-style: none,
      ),
    ),
  ),
  'children-center': (
    function: 'nested-rules',
    class: children\:center,
    nesting: (
      '& *': (
        text-align: center,
      ),
    ),
  ),
  'children-a-text-color': (
    function: 'nested-rules',
    class: children\:a-text-color,
    nesting: (
      '& a': (
        color: var(--a-clr),
      ),
    ),
  ),
  'before-background': (
    function: 'nested-rules',
    class: before\:background,
    nesting: (
      '&::before': (
        content: '',
        display: var(--before-display, block),
        background-image: var(--before-background),
        background-repeat: no-repeat,
        background-size: var(--before-background-size, cover),
        width: var(--before-width, 20px),
        height: var(--before-height, 20px),
      ),
    ),
  ),
  'focus-within-outline': (
    function: 'nested-rules',
    class: focus-within\:outline,
    nesting: (
      '&:focus-within': (
        outline: var(--outline-width, 2px) var(--outline-style, solid)
          var(--outline-color, currentColor),
        outline-offset: var(--outline-offset, 0.2lh),
      ),
    ),
  ),
  'list-reset': (
    function: 'property-advanced',
    class: list-reset,
    properties: (
      list-style: none,
      padding-left: 0,
      margin-block: 0,
    ),
  ),
  'scrollthumb-webkit-custom': (
    function: 'property-advanced',
    state: '::-webkit-scrollbar-thumb',
    class: custom-scrollthumb,
    properties: (
      border-radius: 8px,
      border: 3px solid #fff,
      background-color: rgba(0, 0, 0, 0.3),
    ),
  ),
  'children-font-weight': (
    function: 'nested-rules',
    values: $font-weights,
    class: children\:fw,
    nesting: (
      '& *': (
        font-weight: #{VALUE},
      ),
    ),
  ),
  'direct-children-flex': (
    function: 'nested-rules',
    class: direct-children\:flex-1,
    nesting: (
      '& > *': (
        flex: 1,
      ),
    ),
  ),
  'children-color-inherit': (
    function: 'nested-rules',
    class: children\:text-inherit,
    nesting: (
      '&  *': (
        color: inherit,
      ),
    ),
  ),
  'direct-children-color-inherit': (
    function: 'nested-rules',
    class: direct-children\:text-inherit,
    nesting: (
      '& > *': (
        color: inherit,
      ),
    ),
  ),
  'grid-templates': (
    function: 'responsive-custom-properties',
    class: grid-template,
    responsive: true,
    responsive-custom-properties: (
      grid-template-columns: col-temp,
      grid-template-rows: row-temp,
    ),
  ),
);
